<Window x:Class="IFCTranslatorWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        ResizeMode="CanResize"
        mc:Ignorable="d"
        Title="IFC Translator"
        Height="840"
        Width="1200"
        Icon="/Assets/IFC_logo_transparent.png"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen">
    <!--To remove top caption while preserving ability to resize-->
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0" CornerRadius="0" CaptionHeight="0" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <Style TargetType="materialDesign:Chip" BasedOn="{StaticResource {x:Type materialDesign:Chip}}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="FontSize" Value="15" />
        </Style>
        <!--// Toggle Button Style Template //-->

        <ImageBrush x:Key="TbMouseOver"
                    ImageSource="Assets/IFC_logo_halo.png" />

        <!--// Text font style //-->

        <Style x:Key="FontStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">

            <Setter Property="FontFamily"
                    Value="Fonts/Roboto-Light.ttf #Roboto" />

            <Setter Property="VerticalAlignment"
                    Value="Center" />

            <Setter Property="HorizontalAlignment"
                    Value="Left" />

            <Setter Property="Foreground"
                    Value="White" />

            <Setter Property="FontSize"
                    Value="20" />

        </Style>

        <Style TargetType="GroupBox" BasedOn="{StaticResource MaterialDesignCardGroupBox}">
            <Setter Property="Width" Value="250" />
            <Setter Property="Height" Value="Auto" />
        </Style>

        <!--// Tooltip Style Template //-->
        <Style TargetType="ToggleButton">
            <Setter Property="Cursor" Value="Hand" />
        </Style>
        <Style TargetType="ToolTip" x:Key="TtStyle">

            <Setter Property="Placement" Value="Right" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="20,0,0,0" />
            <Setter Property="Background" Value="#4A5668" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="PlacementRectangle" Value="60,0,0,0" />
            <Setter Property="HorizontalOffset" Value="15" />
            <Setter Property="VerticalOffset" Value="20" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />

        </Style>

        <!--// App Close Button Style Template //-->

        <ImageBrush x:Key="CloseBtnMouseOver" ImageSource="Assets/close_MouseOver.png" />
        <ImageBrush x:Key="HideBtnMouseOver" ImageSource="Assets/hide_MouseOver.png" />
        <ImageBrush x:Key="MaximizeBtnMouseOver" ImageSource="Assets/maximize_MouseOver.png" />


        <Style x:Key="CloseBtn" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="button"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" />

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver"
                                     Value="True">

                                <Setter Property="Background"
                                        TargetName="button"
                                        Value="{StaticResource CloseBtnMouseOver}" />

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>
        <Style x:Key="HideBtn" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="button"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" />

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver"
                                     Value="True">

                                <Setter Property="Background"
                                        TargetName="button"
                                        Value="{StaticResource HideBtnMouseOver}" />

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>
        
        <Style x:Key="MaximizeBtn" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="button"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" />

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver"
                                     Value="True">

                                <Setter Property="Background"
                                        TargetName="button"
                                        Value="{StaticResource MaximizeBtnMouseOver}" />

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>


        <Style x:Key="TbStyle" TargetType="{x:Type ToggleButton}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ToggleButton}">

                        <Border x:Name="border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" />

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource TbMouseOver}" />

                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource TbMouseOver}" />

                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">

                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource TbMouseOver}" />

                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource TbMouseOver}" />

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>

    </Window.Resources>
    <Grid>
        <!--// Background Color //-->
        <Grid Background="Black">

            <!--// Background Image //-->
            <Grid PreviewMouseLeftButtonDown="BG_PreviewMouseLeftButtonDown" MouseDown="MousedownDrag">

                <Frame x:Name="Navframe" NavigationUIVisibility="Hidden" Background="White" Navigating="NavFrame_OnNavigating" Focusable="True" MouseDown="Navframe_OnMouseDown" />

            </Grid>
            <materialDesign:Snackbar
                IsActive="False" Background="#2E333A"
                x:Name="NavFrameSnackbar"
                HorizontalAlignment="Center" VerticalAlignment="Bottom"
                MessageQueue="{materialDesign:MessageQueue}" />

            <!--// App Close Button //-->
            <Grid Width="Auto" Height="40" VerticalAlignment="Top" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>

                <materialDesign:PopupBox Grid.Column="0" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                    <StackPanel Width="140">
                        <Button Content="Settings" />
                        <Button Content="Themes" />
                        <Separator />
                        <Grid Width="140">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Height="30" Content="Debug" VerticalContentAlignment="Center" HorizontalAlignment="Center" />
                            <ToggleButton Grid.Column="1" Style="{StaticResource MaterialDesignSwitchToggleButton}" Checked="ConsoleToggle_OnChecked" Unchecked="ConsoleToggle_OnUnchecked" />
                        </Grid>
                        <Separator />
                        <Button Content="Exit" Click="CloseBtn_Click" />
                    </StackPanel>
                </materialDesign:PopupBox>

                <Button x:Name="HideBtn"
                        Grid.Column="1"
                        Grid.Row="0"
                        Height="30"
                        Width="30"
                        BorderThickness="0"
                        Style="{StaticResource HideBtn}" Click="HideBtn_Click">

                    <Button.Background>

                        <ImageBrush ImageSource="Assets/hide.png" />

                    </Button.Background>

                </Button>
                
                <Button x:Name="MaximizeBtn"
                        Grid.Column="2"
                        Grid.Row="0"
                        Height="30"
                        Width="30"
                        BorderThickness="0"
                        Style="{StaticResource MaximizeBtn}" Click="MaximizeBtn_OnClick">

                    <Button.Background>

                        <ImageBrush ImageSource="Assets/maximize.png" />

                    </Button.Background>

                </Button>
                <Button x:Name="CloseBtn"
                        Grid.Column="3"
                        Grid.Row="0"
                        Height="30"
                        Width="30"
                        BorderThickness="0"
                        Style="{StaticResource CloseBtn}" Click="CloseBtn_Click">

                    <Button.Background>

                        <ImageBrush ImageSource="Assets/close.png" />

                    </Button.Background>

                </Button>
            </Grid>


            <!--// Navigation Panel //-->
            <Grid x:Name="NavPnl"
                  HorizontalAlignment="Left"
                  Width="80"
                  Background="#2E333A"
                  MouseDown="MousedownDrag">

                <StackPanel x:Name="LeftStackPanel">

                    <!--// Grid for the Menu Toggle Button //-->

                    <Grid Height="90">

                        <!--// Menu title text //-->

                        <TextBlock Margin="85,5,0,0"
                                   Text="IFC EasyTrans"
                                   FontSize="22"
                                   Background="Transparent"
                                   Style="{StaticResource FontStyle}">

                            <!--// Shadow Effect //-->

                            <TextBlock.Effect>

                                <DropShadowEffect BlurRadius="10"
                                                  ShadowDepth="1"
                                                  Direction="-90"
                                                  Color="White" />

                            </TextBlock.Effect>

                        </TextBlock>

                        <!--// Toggle Button //-->

                        <ToggleButton x:Name="TgBtn"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      Margin="8,0,0,0"
                                      Height="64"
                                      Width="64"
                                      BorderThickness="0"
                                      Style="{StaticResource TbStyle}" Unchecked="Tg_Btn_Unchecked" Checked="Tg_Btn_Checked">

                            <!--// Toggle button default background image //-->

                            <ToggleButton.Background>

                                <ImageBrush ImageSource="Assets/IFC_logo_transparent.png"
                                            Stretch="UniformToFill" />

                            </ToggleButton.Background>
                            <!--// Toggle Button - Checked, Unchecked events //-->

                            <ToggleButton.Triggers>

                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">

                                    <BeginStoryboard>

                                        <Storyboard x:Name="HideStackPanel">

                                            <DoubleAnimation

                                                Storyboard.TargetName="NavPnl"
                                                Storyboard.TargetProperty="Width"
                                                BeginTime="0:0:0"
                                                From="230" To="80"
                                                Duration="0:0:0.2" />

                                        </Storyboard>

                                    </BeginStoryboard>

                                </EventTrigger>

                                <EventTrigger RoutedEvent="ToggleButton.Checked">

                                    <BeginStoryboard>

                                        <Storyboard x:Name="ShowStackPanel">

                                            <DoubleAnimation

                                                Storyboard.TargetName="NavPnl"
                                                Storyboard.TargetProperty="Width"
                                                BeginTime="0:0:0"
                                                From="65" To="230"
                                                Duration="0:0:0.3" />

                                        </Storyboard>

                                    </BeginStoryboard>

                                </EventTrigger>

                            </ToggleButton.Triggers>


                        </ToggleButton>

                    </Grid>

                    <!--// ListView with menu list items //-->

                    <ListView x:Name="SideBar"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                        <!--// Editor //-->

                        <ListViewItem
                            Margin="0,0,0,0" MouseEnter="ListViewItem_MouseEnter" Height="80">

                            <StackPanel Orientation="Horizontal"
                                        Width="230">
                                <Image Source="Assets/designer.png"
                                       Stretch="UniformToFill"
                                       Margin="15,0,0,0" Width="40" Height="40" />

                                <TextBlock Text="Editor"
                                           Margin="25,0,0,0"
                                           Style="{StaticResource FontStyle}" />

                            </StackPanel>


                            <ListViewItem.ToolTip>

                                <ToolTip x:Name="TooltipEditor"
                                         Content="Edit translate text here"
                                         Style="{StaticResource TtStyle}" Width="300" />

                            </ListViewItem.ToolTip>

                        </ListViewItem>

                        <!--// Config //-->
                        <ListViewItem
                            Margin="0,0,0,0" MouseEnter="ListViewItem_MouseEnter" Height="80">

                            <StackPanel Orientation="Horizontal"
                                        Width="230">

                                <Image Source="Assets/setting.png"
                                       Stretch="UniformToFill" Width="40" Height="40"
                                       Margin="15,0,0,0" />

                                <TextBlock Text="Config"
                                           Margin="25,0,0,0"
                                           Style="{StaticResource FontStyle}" />

                            </StackPanel>

                            <!--// Tooltip //-->

                            <ListViewItem.ToolTip>

                                <ToolTip x:Name="TooltipConfig"
                                         Content="Configure DeepL API key here"
                                         Style="{StaticResource TtStyle}" />

                            </ListViewItem.ToolTip>

                        </ListViewItem>
                        
                        <!--// Glossary //-->
                        <ListViewItem
                            Margin="0,0,0,0" MouseEnter="ListViewItem_MouseEnter" Height="80">

                            <StackPanel Orientation="Horizontal"
                                        Width="230">

                                <Image Source="Assets/glossary.png"
                                       Stretch="UniformToFill" Width="40" Height="40"
                                       Margin="15,0,0,0" />

                                <TextBlock Text="Glossary"
                                           Margin="25,0,0,0"
                                           Style="{StaticResource FontStyle}" />

                            </StackPanel>

                            <!--// Tooltip //-->

                            <ListViewItem.ToolTip>

                                <ToolTip x:Name="TooltipGlossary"
                                         Content="Manage IFC glossary here"
                                         Style="{StaticResource TtStyle}" />

                            </ListViewItem.ToolTip>

                        </ListViewItem>
                        
                        <!--// File Translation //-->
                        <ListViewItem
                            Margin="0,0,0,0" MouseEnter="ListViewItem_MouseEnter" Height="80">

                            <StackPanel Orientation="Horizontal"
                                        Width="230">

                                <Image Source="Assets/upload.png"
                                       Stretch="UniformToFill" Width="40" Height="40"
                                       Margin="15,0,0,0" />

                                <TextBlock Text="File Translation"
                                           Margin="25,0,0,0"
                                           Style="{StaticResource FontStyle}" />

                            </StackPanel>

                            <!--// Tooltip //-->

                            <ListViewItem.ToolTip>

                                <ToolTip x:Name="TooltipUpload"
                                         Content="Upload whole files for translation"
                                         Style="{StaticResource TtStyle}" />

                            </ListViewItem.ToolTip>

                        </ListViewItem>
                        
                        <!--// Listview items style template //-->

                        <ListView.ItemContainerStyle>

                            <Style TargetType="ListViewItem">

                                <Setter Property="Template">

                                    <Setter.Value>

                                        <ControlTemplate TargetType="{x:Type ListViewItem}">

                                            <Border x:Name="Bd"
                                                    Height="80"
                                                    VerticalAlignment="Center"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="True">

                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                                            </Border>

                                            <ControlTemplate.Triggers>

                                                <MultiTrigger>

                                                    <MultiTrigger.Conditions>

                                                        <Condition Property="IsMouseOver" Value="True" />

                                                    </MultiTrigger.Conditions>

                                                    <Setter Property="Background"
                                                            TargetName="Bd"
                                                            Value="#404D5B" />

                                                    <Setter Property="BorderBrush"
                                                            TargetName="Bd"
                                                            Value="#404D5B" />

                                                </MultiTrigger>

                                            </ControlTemplate.Triggers>


                                        </ControlTemplate>

                                    </Setter.Value>

                                </Setter>

                                <!--<EventSetter Event="MouseDoubleClick" Handler="listViewItem_MouseOpenClick" />-->
                                <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ListViewItem_MouseOpenClick" />
                            </Style>

                        </ListView.ItemContainerStyle>

                    </ListView>

                </StackPanel>


            </Grid>

        </Grid>
    </Grid>

</Window>